<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.0.xsd">


	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="/WEB-INF/config/jdbc.properties" />
	<!--本示例采用DBCP连接池。 连接池配置如下 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method = "close" >
		<property name="driverClassName" value="${jdbc_driverClassName}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		
		<!-- 最大并发连接数 -->
		 <property name = "filters" value = "${filters}" />  
         <property name = "maxActive" value = "${maxActive}" />

         <!-- 初始化连接数量 -->

         <property name = "initialSize" value = "${initialSize}" />

         <!-- 配置获取连接等待超时的时间 -->

         <property name = "maxWait" value = "${maxWait}" />

         <!-- 最小空闲连接数 -->

         <property name = "minIdle" value = "${minIdle}" />  

          <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->

         <property name = "timeBetweenEvictionRunsMillis" value ="${timeBetweenEvictionRunsMillis}" />

         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->

         <property name = "minEvictableIdleTimeMillis" value ="${minEvictableIdleTimeMillis}" />  

         <property name = "validationQuery" value = "${validationQuery}" />  

         <property name = "testWhileIdle" value = "${testWhileIdle}" />  

         <property name = "testOnBorrow" value = "${testOnBorrow}" />  

         <property name = "testOnReturn" value = "${testOnReturn}" />  

         <property name = "maxOpenPreparedStatements" value ="${maxOpenPreparedStatements}" />

         <!-- 打开 removeAbandoned 功能 -->

         <property name = "removeAbandoned" value = "${removeAbandoned}" />

         <!-- 1800 秒，也就是 30 分钟 -->

         <property name = "removeAbandonedTimeout" value ="${removeAbandonedTimeout}" />

         <!-- 关闭 abanded 连接时输出错误日志 -->   

         <property name = "logAbandoned" value = "${logAbandoned}" />
	</bean>

	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" p:configLocation="/WEB-INF/config/mybatis-config.xml"
		p:mapperLocations="/WEB-INF/mapper/*.xml" /><!-- configLocation为mybatis属性 
		mapperLocations为所有mapper -->

	<!-- spring与mybatis整合配置，扫描所有dao ,生成与DAO类相同名字的bean（除了首字母小写） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.demo.dao" p:sqlSessionFactoryBeanName="sqlSessionFactory" />
		

	<!-- 对数据源进行事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
	<tx:annotation-driven mode="proxy"
		transaction-manager="transactionManager" />
</beans>